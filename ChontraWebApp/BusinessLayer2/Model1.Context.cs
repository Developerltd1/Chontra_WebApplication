//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusinessLayer2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dbSiteEntities : DbContext
    {
        public dbSiteEntities()
            : base("name=dbSiteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblEvent> tblEvents { get; set; }
        public virtual DbSet<tblGallery> tblGalleries { get; set; }
        public virtual DbSet<tblNew> tblNews { get; set; }
        public virtual DbSet<tblPayment> tblPayments { get; set; }
        public virtual DbSet<tblSlider> tblSliders { get; set; }
        public virtual DbSet<tblTeamMember> tblTeamMembers { get; set; }
        public virtual DbSet<tblTestimonial> tblTestimonials { get; set; }
        public virtual DbSet<tblText> tblTexts { get; set; }
        public virtual DbSet<tblClient> tblClients { get; set; }
        public virtual DbSet<tblQuote> tblQuotes { get; set; }
        public virtual DbSet<tblApplication> tblApplications { get; set; }
        public virtual DbSet<tblJob> tblJobs { get; set; }
        public virtual DbSet<tblFact> tblFacts { get; set; }
        public virtual DbSet<tblContact> tblContacts { get; set; }
        public virtual DbSet<tblDownload> tblDownloads { get; set; }
        public virtual DbSet<tblService> tblServices { get; set; }
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<tblBook> tblBooks { get; set; }
        public virtual DbSet<tblImage> tblImages { get; set; }
        public virtual DbSet<tblInvoice> tblInvoices { get; set; }
        public virtual DbSet<tblInvoiceDetail> tblInvoiceDetails { get; set; }
        public virtual DbSet<tblLocation> tblLocations { get; set; }
        public virtual DbSet<tblSecurityService> tblSecurityServices { get; set; }
        public virtual DbSet<tblVendor> tblVendors { get; set; }
    
        public virtual int usp_InsertDatafrmExcel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertDatafrmExcel");
        }
    
        public virtual ObjectResult<uspReportInvoicesBWDates_Result> uspReportInvoicesBWDates(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportInvoicesBWDates_Result>("uspReportInvoicesBWDates", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<uspReportInvoicesTransTypeBWDates_Result> uspReportInvoicesTransTypeBWDates(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<int> transType)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var transTypeParameter = transType.HasValue ?
                new ObjectParameter("TransType", transType) :
                new ObjectParameter("TransType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspReportInvoicesTransTypeBWDates_Result>("uspReportInvoicesTransTypeBWDates", fromDateParameter, toDateParameter, transTypeParameter);
        }
    }
}
